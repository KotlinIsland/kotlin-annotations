/*
 * Copyright 2000-2020 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("java")
    id("maven-publish")
    id("com.jfrog.bintray") version "1.7.3"
}

ext.projectVersion = projectVersion
if (System.getenv("BINTRAY_USER") == null) {
    ext.projectVersion = ext.projectVersion + "-SNAPSHOT"
}
println "##teamcity[setParameter name='java.annotations.version' value='$projectVersion']"

group "org.jetbrains"
version rootProject.ext.projectVersion

repositories {
    mavenCentral()
}

archivesBaseName = "annotations"
sourceCompatibility = 1.8

task mainJar(type: Jar) {
    manifest {
        attributes("Automatic-Module-Name": "org.jetbrains." + archivesBaseName.replace('-', '_'))
    }
    from sourceSets.main.output
}

task sourceJar(type: Jar) {
    baseName = archivesBaseName + "-sources"
    from sourceSets.main.java
}

task javadocJar(type: Jar) {
    from javadoc
}

artifacts {
    archives mainJar, sourceJar
}

javadoc {
    source = [sourceSets.main.java]
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId archivesBaseName
            artifact mainJar
            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = DELEGATE_FIRST
                    name "JetBrains Java Annotations"
                    description "A set of annotations used for code inspection support and code documentation."
                    url "https://github.com/JetBrains/java-annotations"
                    scm {
                        url "https://github.com/JetBrains/java-annotations"
                        connection "scm:git:git://github.com/JetBrains/java-annotations.git"
                        developerConnection "scm:git:ssh://github.com:JetBrains/java-annotations.git"
                    }
                    licenses {
                        license {
                            name "The Apache Software License, Version 2.0"
                            url "https://www.apache.org/licenses/LICENSE-2.0.txt"
                            distribution "repo"
                        }
                    }
                    developers {
                        developer {
                            id "JetBrains"
                            name "JetBrains Team"
                            organization "JetBrains"
                            organizationUrl "https://www.jetbrains.com"
                        }
                    }
                }
            }

        }
    }
}
if (System.getenv("BINTRAY_USER") != null) {
    bintray {
        user = System.getenv("BINTRAY_USER")
        key = System.getenv("BINTRAY_KEY")
        publish = true
        publications = ["mavenJava"]
        pkg {
            userOrg = "jetbrains"
            repo = "intellij-redist"
            name = "org.jetbrains:" + archivesBaseName
            version {
                name = rootProject.ext.projectVersion
            }
        }
    }
}


